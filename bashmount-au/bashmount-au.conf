#
# bashmount-au.conf
#
#. /usr/share/bashmount-au/bashmount-au.functions

# Place in /etc/bashmount-au.conf for system wide configuration.
# Place in ~/.config/bashmount-au/config for per-user configuration.
# XDG_CONFIG_HOME is respected if it has been set.

# Set the date format for the log file. Should not need to change. 

date_fmt="$(date +%D-%H-%M-%S)"

# Set devices to blacklist or whitelist. Any device whose "lsblk -P" output contains a string
# listed here will be hidden. The following key-value-pairs are printed:
# lsblk -dPno NAME,TYPE,FSTYPE,LABEL,MOUNTPOINT,PARTLABEL [device_name]
# The strings are matched using "grep -E".
blacklist=()
###
### This example will match any device with "Photosmart" in any field.
### blacklist=( 'Photosmart' )
###
### This example will match the device found at /dev/sda1.
 blacklist=( 'NAME="sda"' )
###
### This example will match /dev/sda1, /dev/sda2 and /dev/sda3.
 blacklist+=( 'NAME="sda[1-9]"' )
 blacklist+=( 'TYPE="crypt"' )
###
### This example matches several different devices. Note that the array can be
### split over multiple lines for convenience.
### blacklist=( 'FSTYPE="ext3"' )
### blacklist+=( 'LABEL="secret"' 'PARTLABEL="secret"' )
### blacklist+=( 'MOUNTPOINT="/"' )
###
### whitelist-uid=( 'UUID="12345"' )

# Set to 'yes' to enable whitelisting devices. NOT YET USED.

#enable_whitelist='yes'

#===== Authentication Settings Start ==========

# Graphical interface, where implemented...ongoing. Requires yad

gui='no'

# Optional two person integrity (tpi) requirement. Set 'yes' to enable. The next (2) settings must also be configured if 'yes'.

tpi='yes'

# If 'tpi' is yet. Set authentication mode to 'local' or 'remote'.

auth_mode='remote'

# If auth_mode='remote'. Define remote authentication function. Example command uses Centrify to authenticate to Windows AD. 
remote_auth () {
 if [[ "${gui}" != "yes" ]]; then
     witness_info=$(yad --form  --title="Witness" --field=username)
	witness=$(echo $witness_info | cut -d '|' -f 1)
 else
    read -r -e -p "Enter witness username: " witness 
 fi
     if [[ "${SUDO_USER}" == "${witness}" ]]; then
          error "The witness must be a different user"
          return 1
     else
        adinfo --auth --user $witness
     fi
}

# Sudo requirement and sudo group authorization. Comment out if not used.

sudo_required='yes'
group_auth='dta'

#===== Authentication Settings End ==========

#===== Logging Settings Start ==========

# To enable logging of file transfers to/from external media set to 'yes'. 

enable_logging="yes"

# If set to "yes", stricter logging is set. Only changes to the mounted filesystem will be logged. Specific Source and/or destination copies or moves to/from local system will no be logged. Setting to 'no' will log more, allowing you to ultimately see where the file is moved to or from, but will also log system and application generated temp files, etc. NOTE: Only works if "enable_logging" is set to yes.

log_mountpoint_only='yes'

# Save a duplicate copy of files "modified" ON the mounted device (possibly copies, moves TO device). NOTE: Only applicable if "enable_logging" and "log_mountpoint_only" is set to yes.

save_copy="yes"
save_copy_directory="/audit/file_logs"

# Log file path

logfile=/var/log/dta.log

# Set additional directories to audit after mounting. User home and mountpoint will be watched by default.

watch_directories="/tmp"

# Needs additional work/testing. Do not use.
# Disable user from writing to /tmp
# disable_tmp='yes'

# Finds ALL writable directories on the local filesystem and adds to the watch log, if enable_logging is set to yes. NOTE: Not applicable if "log_mountpoint_only" is set to 'no'.

find_writeable_directories='yes'

# Logging program path. Uses inotify-tools to monitor changes to configured directories. 

mediawatch=/usr/bin/mediawatch.sh

# High-To-Low (trusted downloading) directory menu option. This only verifies that the files burned to optical media do not contain any additional files or hidden content. It does not inspect file content. It is up to a knowledgeable user to verify the content before burning and that the files are an approved format.

aft_dir=/audit/aft

#===== Logging Settings End ==========

#===== Optional STIG and NIST 800-53 Required Settings Start =======

# Load usb-storage.ko kernel module. Set to 'yes' if usb storage is used and if previously disabled in modprobe.conf or modprobe.d. DISA STIG Requirement.

load_usb_module='yes'

# Ask questions from user before mounting to store in log file. NIST 800-53A AC-4 Assured File Transfer Requirement (ie. classification, source and destination of data)

enable_questions='no'

# Set automount_enable to 'no' to force disabling of autofs, and gnome automounting and autorun to be set or exit.

automount='no'

#===== Optional STIG and NIST 800-53 Required Settings End =======

#===== Additional Optional Settings Start (should not need to change) ======

# Set whether to or not to use udisksctl. The default is to autodetect whether it is available. This can be '0', '1', or 'auto'.

udisks='0'

# Set which sections to show in the output. These can be '0' or '1'.
# Bear in mind that hiding internal devices will also hide all luks volumes,
# regardless of whether they are from a removable device. You may be better off
# blacklisting internal volumes that you don't want to see.

#show_internal='1'
#show_removable='1'
#show_optical='1'
#show_commands='1'

# When device names are really long, we abbreviate the output slightly.
# Set whether to show the full device name regardless of the length.
# This can be '0' or '1'.

#show_full_device_names='0'

# Set whether to colourize the output. This can be '0' or '1'.

colourize='1'

# Set default mount options. umask sets permission of mounted device

default_mount_options="--options nosuid,noexec,noatime,uid=${SUDO_UID}" 
umask=077

# Allow user to choose mountpoint (default dir is /mnt/username/device)

choose_mountpoint='yes'

#run custom pre-initialization scripts. Set '0' to disable or '1' to enable 

run_pre_init='1'

# Set to '1' to run post_init function before exiting script.

run_post_init='1'

# Set "run_post_unmount" to '0' to disable or '1' to enable.

run_post_unmount='1'

# Set "run_post_mount" to '0' to disable or '1' to enable.

run_post_mount='1'

# Set "run_pre_mount" to '0' to disable or '1' to enable.

run_pre_mount='0'

# Set to '1' to enable desc
#custom4_show='0'
#custom4_desc=''

#custom5_show='0'
#custom5_desc='virus scan'

#custom6_show='0'
#custom6_desc=''

# Set the antivirus scanning command if available. NEEDS WORK> DO NOT USE.
#antivirus_scanner_exec="/opt/Symantec/symantec_antivirus/sav manualscan -s"

#===== Additional Optional Settings End ======
